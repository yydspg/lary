server:
  port: 9001
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 12345678
    url: jdbc:mysql://192.168.1.101:3306/lary
  profiles:
    active: dev
    include: lary
  redis:
    single:
      address: "redis://127.0.0.1:6379"
      database: 1

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
logging:
  level:
    sql: debug
    web: debug
# retrofit spring boot starter config list
retrofit:
  # 全局转换器工厂
  global-converter-factories:
    - com.github.lianjiatech.retrofit.spring.boot.core.BasicTypeConverterFactory
    - retrofit2.converter.jackson.JacksonConverterFactory
  # 全局调用适配器工厂(组件扩展的调用适配器工厂已经内置，这里请勿重复配置)
  global-call-adapter-factories:

  # 全局日志打印配置
  global-log:
    # 启用日志打印
    enable: true
    # 全局日志打印级别
    log-level: debug
    # 全局日志打印策略
    log-strategy: basic
    # 是否聚合打印请求日志
    aggregate: true

  # 全局重试配置
  global-retry:
    # 是否启用全局重试
    enable: false
    # 全局重试间隔时间
    interval-ms: 100
    # 全局最大重试次数
    max-retries: 2
    # 全局重试规则
    retry-rules:
      - response_status_not_2xx
      - occur_io_exception

  # 全局超时时间配置
  global-timeout:
    # 全局读取超时时间
    read-timeout-ms: 10000
    # 全局写入超时时间
    write-timeout-ms: 10000
    # 全局连接超时时间
    connect-timeout-ms: 10000
    # 全局完整调用超时时间
    call-timeout-ms: 0

  # 熔断降级配置
  degrade:
    # 熔断降级类型。默认none，表示不启用熔断降级
    degrade-type: none
    # 全局sentinel降级配置
    global-sentinel-degrade:
      # 是否开启
      enable: false
      # 各降级策略对应的阈值。平均响应时间(ms)，异常比例(0-1)，异常数量(1-N)
      count: 1000
      # 熔断时长，单位为 s
      time-window: 5
      # 降级策略（0：平均响应时间；1：异常比例；2：异常数量）
      grade: 0

    # 全局resilience4j降级配置
    global-resilience4j-degrade:
      # 是否开启
      enable: false
      # 根据该名称从#{@link CircuitBreakerConfigRegistry}获取CircuitBreakerConfig，作为全局熔断配置
      circuit-breaker-config-name: defaultCircuitBreakerConfig
  # 自动设置PathMathInterceptor的scope为prototype
  auto-set-prototype-scope-for-path-math-interceptor: true
wk:
  base:
    url: http://127.0.0.1:5001

#aliyun:
#  sms:
#    access-key-id: test
#    sign-name: test
#    template-code: test
#    access-key-secret: test

#支付宝-沙箱
alipay:
  appId: 2021002121608816
  #协议(固定)
  protocol: https
  #域名
  gatewayHost: openapi.alipaydev.com
  #签名类型(固定)
  signType: RSA2
  #应用私钥(不能有空格)
  merchantPrivateKey: 填入自己应用私钥
  #支付宝公钥(不能有空格)
  alipayPublicKey: 填入自己支付宝公钥
  #异步通知地址
  notifyUrl: http://localhost:8080/alipay/notifyUrl
  #同步通知地址
  returnUrl: http://localhost:8080/alipay/returnUrl
sms:
  config-type: yaml
  blends:
    aliyun:
      #阿里云的accessKey
      accessKeyId: 您的accessKey
      #阿里云的accessKeySecret
      accessKeySecret: 您的accessKeySecret
      #短信签名
      signature: 测试签名
      #模板ID 用于发送固定模板短信使用
      templateId: SMS_215125134
      #模板变量 上述模板的变量
      templateName: code
      #请求地址 默认为dysmsapi.aliyuncs.com 如无特殊改变可以不用设置
      requestUrl: dysmsapi.aliyuncs.com
#    自定义标识2:
#      #华为短信appKey
#      appKey: 5N6fvXXXX920HaWhVXXXXXX7fYa
#      #华为短信appSecret
#      app-secret: Wujt7EYzZTBXXXXXXEhSP6XXXX
#      #短信签名
#      signature: 华为短信测试
#      #通道号
#      sender: 8823040504797
#      #模板ID 如果使用自定义模板发送方法可不设定
#      template-id: acXXXXXXXXc274b2a8263479b954c1ab5
#      #华为回调地址，如不需要可不设置或为空
#      statusCallBack:
#      #华为分配的app请求地址
#      url: https://XXXXX.cn-north-4.XXXXXXXX.com:443
#    自定义标识3:
#      #助通短信
#      #助通终端用户管理的用户名 username 必填；非登录账号密码，请登录后台管理地址进行查看：https://mix2.zthysms.com/login
#      accessKeyId: tusxxxxxxXXX
#      #助通终端用户管理的用户名 passwrod 必填；
#      accessKeySecret: UbXXXxxx
#      #短信签名，可选；可选的时候，只能使用自定义短信不能使用模板短信； 具体在这里查看审核过的短信签名：https://mix2.zthysms.com/index.html#/SignatureManagement
#      signature: 上海千XXXX
  #核心线程池大小
  corePoolSize: 10
  #最大线程数
  maxPoolSize: 30
  #队列容量
  queueCapacity: 50
  #活跃时间
  keepAliveSeconds: 60
  # 线程名字前缀
  threadNamePrefix: sms-executor-
  #设置线程池关闭的时候等待所有任务都完成再继续销毁其他的Bean
  shutdownStrategy: true

liteflow:
  #规则文件路径
  rule-source: config/flow.el.xml
#  #-----------------以下非必须-----------------
#  #liteflow是否开启，默认为true
#  enable: true
#  #liteflow的banner打印是否开启，默认为true
#  print-banner: true
#  #zkNode的节点，只有使用zk作为配置源的时候才起作用，默认为/lite-flow/flow
#  zk-node: /lite-flow/flow
#  #上下文的最大数量槽，默认值为1024
#  slot-size: 1024
#  #FlowExecutor的execute2Future的线程数，默认为64
#  main-executor-works: 64
#  #FlowExecutor的execute2Future的自定义线程池Builder，LiteFlow提供了默认的Builder
#  main-executor-class: com.yomahub.liteflow.thread.LiteFlowDefaultMainExecutorBuilder
#  #自定义请求ID的生成类，LiteFlow提供了默认的生成类
#  request-id-generator-class: com.yomahub.liteflow.flow.id.DefaultRequestIdGenerator
#  #并行节点的线程池Builder，LiteFlow提供了默认的Builder
#  thread-executor-class: com.yomahub.liteflow.thread.LiteFlowDefaultWhenExecutorBuilder
#  #异步线程最长的等待时间(只用于when)，默认值为15000
#  when-max-wait-time: 15000
#  #异步线程最长的等待时间(只用于when)，默认值为MILLISECONDS，毫秒
#  when-max-wait-time-unit: MILLISECONDS
#  #when节点全局异步线程池最大线程数，默认为16
#  when-max-workers: 16
#  #并行循环子项线程池最大线程数，默认为16
#  parallel-max-workers: 16
#  #并行循环子项线程池等待队列数，默认为512
#  parallel-queue-limit: 512
#  #并行循环子项的线程池Builder，LiteFlow提供了默认的Builder
#  parallel-loop-executor-class: com.yomahub.liteflow.thread.LiteFlowDefaultParallelLoopExecutorBuilder
#  #when节点全局异步线程池等待队列数，默认为512
#  when-queue-limit: 512
#  #设置解析模式，一共有三种模式，PARSE_ALL_ON_START | PARSE_ALL_ON_FIRST_EXEC | PARSE_ONE_ON_FIRST_EXEC
#  parse-mode: PARSE_ALL_ON_START
#  #全局重试次数，默认为0
#  retry-count: 0
#  #是否支持不同类型的加载方式混用，默认为false
#  support-multiple-type: false
#  #全局默认节点执行器
#  node-executor-class: com.yomahub.liteflow.flow.executor.DefaultNodeExecutor
#  #是否打印执行中过程中的日志，默认为true
#  print-execution-log: true
#  #是否开启本地文件监听，默认为false
#  enable-monitor-file: false
#  #是否开启快速解析模式，默认为false
#  fast-load: false
#  #简易监控配置选项
#  monitor:
#    #监控是否开启，默认不开启
#    enable-log: false
#    #监控队列存储大小，默认值为200
#    queue-limit: 200
#    #监控一开始延迟多少执行，默认值为300000毫秒，也就是5分钟
#    delay: 300000
#    #监控日志打印每过多少时间执行一次，默认值为300000毫秒，也就是5分钟
#    period: 300000
jetcache:
  statIntervalMinutes: 15
  areaInCacheName: false
  hidePackages: com.alibaba
  local:
    default:
      type: caffeine
      limit: 100
      keyConvertor: fastjson2 #其他可选：fastjson/jackson
      expireAfterWriteInMillis: 100000
#    otherArea:
#      type: linkedhashmap
#      limit: 100
#      keyConvertor: none
#      expireAfterWriteInMillis: 100000
  remote:
    default:
      type: redis.lettuce
      keyConvertor: fastjson2 #其他可选：fastjson/jackson
      broadcastChannel: projectA
      uri: redis://127.0.0.1:6379/
      valueEncoder: kryo5 #其他可选：kryo/kryo5
      valueDecoder: kryo5 #其他可选：kryo/kryo5
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50

#    otherArea:
#      type: redis
#      keyConvertor: fastjson2 #其他可选：fastjson/jackson
#      broadcastChannel: projectA
#      valueEncoder: kryo/kryo5 #其他可选：kryo/kryo5
#      valueDecoder: kryo/kryo5 #其他可选：kryo/kryo5
#      poolConfig:
#        minIdle: 5
#        maxIdle: 20
#        maxTotal: 50
#      host: ${redis.host}
#      port: ${redis.port}
